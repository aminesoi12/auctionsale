<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:property-placeholder
		location="file:///${AUCTION_SALE_HOME}/configuration/database.properties,file:///${AUCTION_SALE_HOME}/configuration/hibernate.properties" />
		
<context:annotation-config/>
	<context:component-scan base-package="com.insat.auctionsale.core"/>
	<jpa:repositories base-package="com.insat.auctionsale.core.dao" 
	factory-class="com.insat.auctionsale.core.dao.config.CustomRepositoryFactoryBean"
	transaction-manager-ref="transactionManager"
	repository-impl-postfix="CustomImpl"/>

	<!-- spring transaction -->
	<tx:annotation-driven />

	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<description>Allow spring to configure hibernate specific settings
		</description>
		 <property name="database" value="POSTGRESQL"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false" p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}" p:username="${jdbc.user}" p:password="${jdbc.password}"
		p:initialSize="5" p:maxActive="100" p:maxIdle="30" p:maxWait="1000"
		p:poolPreparedStatements="true" p:defaultAutoCommit="true"
		p:removeAbandoned="true" p:removeAbandonedTimeout="60" p:testOnBorrow="true"
		p:testWhileIdle="true" >
		<description>
			Simple datasource. This is a direct access to the
			datasource that can be used for specific queries that need to bypass
			hibernate functionalities.
			However, if you
			need to use JDBC, please
			look at hibernate SQL-QUERIES, they would most probably be a more
			elegant way to solve your problem.
		</description>
	</bean>
	
	<bean id="sharedTransactionTemplate"
	    class="org.springframework.transaction.support.TransactionTemplate">
	  <property name="timeout" value="320"/>
	  <property name="transactionManager" ref="transactionManager"></property>
	</bean>

	<bean id="entityManagerFactory" 
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="hibernateJpaVendorAdapter"
		p:packagesToScan="com.insat.auctionsale.common.entity" p:jpaProperties="file:///${AUCTION_SALE_HOME}/configuration/hibernate.properties">
		<description>Build the entity manager with Hibernate as a provider
		</description>
	</bean>

</beans>